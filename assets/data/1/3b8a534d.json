{"data":{"html":{"path":"/html/filtering-data","title":"Filtering data","content":"<h1 id=\"filtering-data\"><a href=\"#filtering-data\" aria-hidden=\"true\">#</a>Filtering data</h1>\n<p>Each content type collection in the GraphQL schema has a <code class=\"language-text\">filter</code> argument which can be used to filter the results. You can filter by <code class=\"language-text\">id</code>, <code class=\"language-text\">title</code>, <code class=\"language-text\">slug</code>, <code class=\"language-text\">path</code> or any custom field. Each field type supports different operators.</p>\n<p>The syntax for <code class=\"language-text\">filter</code> is based on the <a href=\"https://docs.mongodb.com/manual/reference/operator/query/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">mongodb</a> query syntax.</p>\n<h2 id=\"string-fields\"><a href=\"#string-fields\" aria-hidden=\"true\">#</a>String fields</h2>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>eq</strong> <em>(equal)</em></td>\n<td>Find nodes with field of (strict) equality.</td>\n</tr>\n<tr>\n<td><strong>ne</strong> <em>(not equal)</em></td>\n<td>Find nodes with field not equal to provided value.</td>\n</tr>\n<tr>\n<td><strong>in</strong></td>\n<td>Find nodes with field matching any of the provided values.</td>\n</tr>\n<tr>\n<td><strong>nin</strong> <em>(not in)</em></td>\n<td>Find nodes with field not matching any of the provided values.</td>\n</tr>\n<tr>\n<td><strong>regex</strong></td>\n<td>Filter nodes with property matching provided regular expression.</td>\n</tr>\n<tr>\n<td><strong>len</strong> <em>(length)</em></td>\n<td>Filter nodes which have a string field of specified length.</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"language-graphql\"><span class=\"token keyword\">query</span> <span class=\"token punctuation\">{</span>\n  allPost <span class=\"token punctuation\">(</span><span class=\"token attr-name\">filter</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    edges <span class=\"token punctuation\">{</span>\n      node <span class=\"token punctuation\">{</span>\n        title\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre>\n<p>This example will query nodes where <code class=\"language-text\">id</code> is <strong>1</strong> or <strong>2</strong>.</p>\n<h2 id=\"date-fields\"><a href=\"#date-fields\" aria-hidden=\"true\">#</a>Date fields</h2>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>gt</strong> <em>(greater than)</em></td>\n<td>Find nodes with field greater than provided value.</td>\n</tr>\n<tr>\n<td><strong>gte</strong> <em>(greater or equal)</em></td>\n<td>Find nodes with field greater or equal to provided value.</td>\n</tr>\n<tr>\n<td><strong>lt</strong> <em>(less than)</em></td>\n<td>Find nodes with field less than provided value.</td>\n</tr>\n<tr>\n<td><strong>lte</strong> <em>(less than or equal)</em></td>\n<td>Find nodes with field less than or equal to provided value.</td>\n</tr>\n<tr>\n<td><strong>dteq</strong> <em>(equal dates)</em></td>\n<td>Filter nodes by date property equal to provided date value.</td>\n</tr>\n<tr>\n<td><strong>between</strong></td>\n<td>Find nodes with field value between provided values.</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"language-graphql\"><span class=\"token keyword\">query</span> <span class=\"token punctuation\">{</span>\n  allPost <span class=\"token punctuation\">(</span><span class=\"token attr-name\">filter</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">date</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">gte</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"2017\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    edges <span class=\"token punctuation\">{</span>\n      node <span class=\"token punctuation\">{</span>\n        title\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre>\n<p>This example will query only nodes where <code class=\"language-text\">date</code> is greater than or equal to <strong>2017</strong>.</p>\n<h2 id=\"boolean-fields\"><a href=\"#boolean-fields\" aria-hidden=\"true\">#</a>Boolean fields</h2>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>eq</strong> <em>(equal)</em></td>\n<td>Find nodes with field of (strict) equality.</td>\n</tr>\n<tr>\n<td><strong>ne</strong> <em>(not equal)</em></td>\n<td>Find nodes with field not equal to provided value.</td>\n</tr>\n<tr>\n<td><strong>in</strong></td>\n<td>Find nodes with field matching any of the provided values.</td>\n</tr>\n<tr>\n<td><strong>nin</strong> <em>(not in)</em></td>\n<td>Find nodes with field not matching any of the provided values.</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"language-graphql\"><span class=\"token keyword\">query</span> <span class=\"token punctuation\">{</span>\n  allPost <span class=\"token punctuation\">(</span><span class=\"token attr-name\">filter</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">featured</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">eq</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    edges <span class=\"token punctuation\">{</span>\n      node <span class=\"token punctuation\">{</span>\n        title\n        featured\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre>\n<p>This example will query only nodes where <code class=\"language-text\">featured</code> is <strong>true</strong>.</p>\n<h2 id=\"number-fields\"><a href=\"#number-fields\" aria-hidden=\"true\">#</a>Number fields</h2>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>eq</strong> <em>(equal)</em></td>\n<td>Find nodes with field of (strict) equality.</td>\n</tr>\n<tr>\n<td><strong>ne</strong> <em>(not equal)</em></td>\n<td>Find nodes with field not equal to provided value.</td>\n</tr>\n<tr>\n<td><strong>in</strong></td>\n<td>Find nodes with field matching any of the provided values.</td>\n</tr>\n<tr>\n<td><strong>nin</strong> <em>(not in)</em></td>\n<td>Find nodes with field not matching any of the provided values.</td>\n</tr>\n<tr>\n<td><strong>gt</strong> <em>(greater than)</em></td>\n<td>Find nodes with field greater than provided value.</td>\n</tr>\n<tr>\n<td><strong>gte</strong> <em>(greater or equal)</em></td>\n<td>Find nodes with field greater or equal to provided value.</td>\n</tr>\n<tr>\n<td><strong>lt</strong> <em>(less than)</em></td>\n<td>Find nodes with field less than provided value.</td>\n</tr>\n<tr>\n<td><strong>lte</strong> <em>(less than or equal)</em></td>\n<td>Find nodes with field less than or equal to provided value.</td>\n</tr>\n<tr>\n<td><strong>between</strong></td>\n<td>Find nodes with field value between provided values.</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"language-graphql\"><span class=\"token keyword\">query</span> <span class=\"token punctuation\">{</span>\n  allProduct <span class=\"token punctuation\">(</span><span class=\"token attr-name\">filter</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">price</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">between</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">49</span><span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    edges <span class=\"token punctuation\">{</span>\n      node <span class=\"token punctuation\">{</span>\n        title\n        price\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre>\n<p>This example will query only nodes with <code class=\"language-text\">price</code> value between <strong>49</strong> and <strong>99</strong>.</p>\n<h2 id=\"array-fields\"><a href=\"#array-fields\" aria-hidden=\"true\">#</a>Array fields</h2>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>size</strong></td>\n<td>Filter nodes which have an array property of specified size.</td>\n</tr>\n<tr>\n<td><strong>contains</strong></td>\n<td>Find nodes with field containing the provided value.</td>\n</tr>\n<tr>\n<td><strong>containsAny</strong></td>\n<td>Find nodes with field containing any of the provided values.</td>\n</tr>\n<tr>\n<td><strong>containsNone</strong></td>\n<td>Find nodes with field containing none of the provided values.</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"language-graphql\"><span class=\"token keyword\">query</span> <span class=\"token punctuation\">{</span>\n  allPost <span class=\"token punctuation\">(</span><span class=\"token attr-name\">filter</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">keywords</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">contains</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"gridsome\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    edges <span class=\"token punctuation\">{</span>\n      node <span class=\"token punctuation\">{</span>\n        title\n        keywords\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre>\n<p>This example will query only nodes which has the <strong>gridsome</strong> <code class=\"language-text\">keyword</code>.</p>\n","headings":[{"value":"Filtering data"}],"subtitles":[{"value":"String fields","anchor":"#string-fields"},{"value":"Date fields","anchor":"#date-fields"},{"value":"Boolean fields","anchor":"#boolean-fields"},{"value":"Number fields","anchor":"#number-fields"},{"value":"Array fields","anchor":"#array-fields"}]}},"context":{}}