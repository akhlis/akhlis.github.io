{"data":{"html":{"path":"/html/atribut-id","title":"Transformer API","content":"<h1 id=\"transformer-api\"><a href=\"#transformer-api\" aria-hidden=\"true\">#</a>Transformer API</h1>\n<p>Transformers are used by the source plugins to parse content. They are automatically used as long as they are installed and found in <code class=\"language-text\">package.json</code>.</p>\n<h2 id=\"mime-types\"><a href=\"#mime-types\" aria-hidden=\"true\">#</a>Mime types</h2>\n<h3 id=\"transformermimetypes\"><a href=\"#transformermimetypes\" aria-hidden=\"true\">#</a><code class=\"language-text\">transformer.mimeTypes()</code></h3>\n<p>A transformer must have a static <code class=\"language-text\">mimeTypes</code> method which returns an array of <a href=\"http://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">mime types</a> the transformer should be able to parse.</p>\n<h2 id=\"parse-content\"><a href=\"#parse-content\" aria-hidden=\"true\">#</a>Parse content</h2>\n<h3 id=\"transformerparsesource\"><a href=\"#transformerparsesource\" aria-hidden=\"true\">#</a><code class=\"language-text\">transformer.parse(source)</code></h3>\n<p>A transformer must also implement a <code class=\"language-text\">parse</code> method that will be excecuted be source plugins to parse content. The method must return a node.</p>\n<h2 id=\"add-graphql-fields\"><a href=\"#add-graphql-fields\" aria-hidden=\"true\">#</a>Add GraphQL fields</h2>\n<h3 id=\"transformerextendnodetype\"><a href=\"#transformerextendnodetype\" aria-hidden=\"true\">#</a><code class=\"language-text\">transformer.extendNodeType()</code></h3>\n<p>Transformers can also extend nodes in the GraphQL schema with additional fields by implementing a <code class=\"language-text\">extendNodeType</code> method. The fields will only be added to nodes it has transformed.</p>\n<h2 id=\"example\"><a href=\"#example\" aria-hidden=\"true\">#</a>Example</h2>\n<pre class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Transformer</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> <span class=\"token function\">mimeTypes</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'application/json'</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">parse</span> <span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> title<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>fields <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      title<span class=\"token punctuation\">,</span>\n      fields\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">extendNodeType</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> graphql <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// custom GraphQL fields for transformed node</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> Transformer</pre>\n","headings":[{"value":"Transformer API"}],"subtitles":[{"value":"Mime types","anchor":"#mime-types"},{"value":"Parse content","anchor":"#parse-content"},{"value":"Add GraphQL fields","anchor":"#add-graphql-fields"},{"value":"Example","anchor":"#example"}]}},"context":{}}