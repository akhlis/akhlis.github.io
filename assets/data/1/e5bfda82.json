{"data":{"html":{"path":"/html/images","title":"Images","content":"<h1 id=\"images\"><a href=\"#images\" aria-hidden=\"true\">#</a>Images</h1>\n<blockquote>\n<p>Gridsome has a built-in <code class=\"language-text\">&lt;g-image&gt;</code> component that outputs an optimized progressive image. It also resizes and crops in real-time when developing. There is no fake resizing with CSS.</p>\n</blockquote>\n<p><code class=\"language-text\">&lt;g-image&gt;</code> compresses and lazy-loads images automatically. The images will be resized down to 480, 1024, 1920 and 2560 pixels by default. A blurred version is displayed while the image is being loaded and a fallback <code class=\"language-text\">img</code> tag for browsers without JavaScript enabled is also generated.</p>\n<blockquote>\n<p>Only local, relative image paths will be compressed by Gridsome.</p>\n</blockquote>\n<h2 id=\"usage-in-vue-templates\"><a href=\"#usage-in-vue-templates\" aria-hidden=\"true\">#</a>Usage in Vue templates</h2>\n<p>A <code class=\"language-text\">&lt;g-image&gt;</code> component is available in all your Vue templates and can be used to compress local images. The <code class=\"language-text\">src</code> attribute and options like <code class=\"language-text\">width</code>, <code class=\"language-text\">height</code> and <code class=\"language-text\">quality</code> must be static values because they are compiled into an object which contains URLs and other information that will be rendered into an <code class=\"language-text\">img</code> tag.</p>\n<pre class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>g-image</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>./image.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>500<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre>\n<h2 id=\"usage-via-graphql\"><a href=\"#usage-via-graphql\" aria-hidden=\"true\">#</a>Usage via GraphQL</h2>\n<p>Local image paths from sources can also be compressed. Options like <code class=\"language-text\">width</code>, <code class=\"language-text\">height</code> and <code class=\"language-text\">quality</code> must be set in the query. The field can be passed to <code class=\"language-text\">g-image</code> as the <code class=\"language-text\">src</code> attribute.</p>\n<pre class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Layout</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>g-image</span> <span class=\"token attr-name\">:src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>$page.post.image<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Layout</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>page-query</span><span class=\"token punctuation\">></span></span><span class=\"token graphql\">\n<span class=\"token keyword\">query</span> BlogPost <span class=\"token punctuation\">(</span><span class=\"token variable\">$path</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">post</span><span class=\"token punctuation\">:</span> blogPost <span class=\"token punctuation\">(</span><span class=\"token attr-name\">path</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$path</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    image <span class=\"token punctuation\">(</span><span class=\"token attr-name\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">720</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">quality</span><span class=\"token punctuation\">:</span> <span class=\"token number\">90</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>page-query</span><span class=\"token punctuation\">></span></span></pre>\n<h2 id=\"usage-in-markdown\"><a href=\"#usage-in-markdown\" aria-hidden=\"true\">#</a>Usage in Markdown</h2>\n<p>The <a href=\"/plugins/transformer-remark\">gridsome-transformer-remark</a> transformer plugin automatically converts normal Markdown images to <code class=\"language-text\">g-image</code> compatible markup.</p>\n<pre class=\"language-md\">[Alternative text](./image.jpg)</pre>\n<h2 id=\"image-cropping\"><a href=\"#image-cropping\" aria-hidden=\"true\">#</a>Image cropping</h2>\n<p>Crop the image by settings both <code class=\"language-text\">width</code> and <code class=\"language-text\">height</code> attributes. The image will be cropped to cover both dimensions by default. Change how to crop with the <a href=\"/docs/images#fit-options\"><code class=\"language-text\">fit</code></a> attribute.</p>\n<pre class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>g-image</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>./image.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>500<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>500<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">fit</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>contain<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre>\n<h2 id=\"options\"><a href=\"#options\" aria-hidden=\"true\">#</a>Options</h2>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Default</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>src</td>\n<td><em>required</em></td>\n<td>Relative path to image file</td>\n</tr>\n<tr>\n<td>width</td>\n<td></td>\n<td>Resize image to specified width in pixels</td>\n</tr>\n<tr>\n<td>height</td>\n<td></td>\n<td>Crop &#x26; resize image to specified height in pixels</td>\n</tr>\n<tr>\n<td>alt</td>\n<td></td>\n<td>Alternate text for the image</td>\n</tr>\n<tr>\n<td>fit</td>\n<td><code class=\"language-text\">&quot;cover&quot;</code></td>\n<td>How to crop images. See properties below.</td>\n</tr>\n<tr>\n<td>background</td>\n<td></td>\n<td>Background color for 'contain'</td>\n</tr>\n<tr>\n<td>immediate</td>\n<td><code class=\"language-text\">false</code></td>\n<td>Set to <code class=\"language-text\">true</code> to disable lazy-loading</td>\n</tr>\n<tr>\n<td>blur</td>\n<td><code class=\"language-text\">40</code></td>\n<td>How much in px to blur the image placeholder</td>\n</tr>\n<tr>\n<td>quality</td>\n<td><code class=\"language-text\">75</code></td>\n<td>The quality of the image. (<code class=\"language-text\">0</code> - <code class=\"language-text\">100</code>).</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"fit-options\"><a href=\"#fit-options\" aria-hidden=\"true\">#</a>Fit options</h3>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>cover</td>\n<td>Crop to cover both provided dimensions (default).</td>\n</tr>\n<tr>\n<td>contain</td>\n<td>Embed within both provided dimensions.</td>\n</tr>\n<tr>\n<td>fill</td>\n<td>Ignore the aspect ratio of the input and stretch to both provided dimensions.</td>\n</tr>\n<tr>\n<td>inside</td>\n<td>Preserving aspect ratio, resize the image to be as large as possible while ensuring its dimensions are less than or equal to both those specified.</td>\n</tr>\n<tr>\n<td>outside</td>\n<td>Preserving aspect ratio, resize the image to be as small as possible while ensuring its dimensions are greater than or equal to both those specified.</td>\n</tr>\n</tbody>\n</table>\n","headings":[{"value":"Images"}],"subtitles":[{"value":"Usage in Vue templates","anchor":"#usage-in-vue-templates"},{"value":"Usage via GraphQL","anchor":"#usage-via-graphql"},{"value":"Usage in Markdown","anchor":"#usage-in-markdown"},{"value":"Image cropping","anchor":"#image-cropping"},{"value":"Options","anchor":"#options"}]}},"context":{}}