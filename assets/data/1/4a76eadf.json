{"data":{"doc":{"path":"/docs/client-api","title":"Client API","content":"<h1 id=\"client-api\"><a href=\"#client-api\" aria-hidden=\"true\">#</a>Client API</h1>\n<p>The client API lets you install Vue plugins, register components and directives and modify the options passed to the Vue instance. You can also add router hooks and HTML metas. Start by exporting a default function in a <code class=\"language-text\">src/main.js</code> file in your project to use the Client API. </p>\n<blockquote>\n<p>The function exported by <code class=\"language-text\">src/main.js</code> will be executed after all plugins.</p>\n</blockquote>\n<pre class=\"language-js\"><span class=\"token keyword\">import</span> Bootstrap <span class=\"token keyword\">from</span> <span class=\"token string\">'bootstrap-vue'</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">'bootstrap/dist/css/bootstrap.css'</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'bootstrap-vue/dist/bootstrap-vue.css'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>Vue<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  Vue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>Bootstrap<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></pre>\n<h2 id=\"usage-in-plugins\"><a href=\"#usage-in-plugins\" aria-hidden=\"true\">#</a>Usage in plugins</h2>\n<p>Create a <code class=\"language-text\">gridsome.client.js</code> at root in the plugin directory that exports a function. The function will receive the plugin options as second argument and the context as the third.</p>\n<pre class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>Vue<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></pre>\n<h2 id=\"the-client-context\"><a href=\"#the-client-context\" aria-hidden=\"true\">#</a>The client context</h2>\n<p>The context has references to options for the Vue app, the VueRouter instance and VueMeta options. The file is loaded on the server and in the browser as default.</p>\n<h3 id=\"appoptions\"><a href=\"#appoptions\" aria-hidden=\"true\">#</a>appOptions</h3>\n<ul>\n<li>Type: <code class=\"language-text\">Object</code></li>\n</ul>\n<p>Options passed to the main <strong>Vue Instance</strong> like <code class=\"language-text\">new Vue(appOptions)</code>.\nHere is an example where we add <strong>Vuex</strong> store to the Vue instance.</p>\n<pre class=\"language-js\"><span class=\"token keyword\">import</span> Vuex <span class=\"token keyword\">from</span> <span class=\"token string\">'vuex'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>Vue<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> appOptions <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  Vue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>Vuex<span class=\"token punctuation\">)</span>\n  \n  appOptions<span class=\"token punctuation\">.</span>store <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vuex<span class=\"token punctuation\">.</span>Store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    state<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      count<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    mutations<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">increment</span> <span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        state<span class=\"token punctuation\">.</span>count<span class=\"token operator\">++</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></pre>\n<h3 id=\"router\"><a href=\"#router\" aria-hidden=\"true\">#</a>router</h3>\n<ul>\n<li>Type: <code class=\"language-text\">VueRouter</code></li>\n</ul>\n<p>Interact with the router.</p>\n<pre class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>Vue<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> router <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  router<span class=\"token punctuation\">.</span><span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">,</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> next<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Do stuff before next page load</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></pre>\n<p>Read more about the <a href=\"https://router.vuejs.org/api/#router-instance-methods\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Vue router</a> methods.</p>\n<h3 id=\"head\"><a href=\"#head\" aria-hidden=\"true\">#</a>head</h3>\n<ul>\n<li>Type: <code class=\"language-text\">Object</code></li>\n</ul>\n<p>Allows you to manage your websites's metadata.</p>\n<pre class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>Vue<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> head <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  head<span class=\"token punctuation\">.</span>script<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    src<span class=\"token punctuation\">:</span> <span class=\"token string\">'https://www.example.com/my-script.js'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></pre>\n<p>Read more about <a href=\"/docs/head\">populating &#x3C;head></a></p>\n<h2 id=\"component-injections\"><a href=\"#component-injections\" aria-hidden=\"true\">#</a>Component Injections</h2>\n<p>These methods are injected into every component.</p>\n<h3 id=\"fetchpath\"><a href=\"#fetchpath\" aria-hidden=\"true\">#</a>$fetch(path)</h3>\n<p>Fetch <code class=\"language-text\">page-query</code> results and <a href=\"http://localhost:8080/docs/pages-api#the-page-context\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">page context</a> from internal pages</p>\n<pre class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">data</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      otherPageData<span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span>\n      otherPageContext<span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> results <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/other-page'</span><span class=\"token punctuation\">)</span>\n      \n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>otherPageData <span class=\"token operator\">=</span> results<span class=\"token punctuation\">.</span>data\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>otherPageContext <span class=\"token operator\">=</span> results<span class=\"token punctuation\">.</span>context\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre>\n<h3 id=\"urlpath\"><a href=\"#urlpath\" aria-hidden=\"true\">#</a>$url(path)</h3>\n<p>Generates URL including <code class=\"language-text\">pathPrefix</code>. Useful for creating internal links without <code class=\"language-text\">g-link</code>.</p>\n<pre class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">:href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>$url(<span class=\"token punctuation\">'</span>/page<span class=\"token punctuation\">'</span>)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre>\n<pre class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/path-prefix/page<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre>\n<h2 id=\"process-injections\"><a href=\"#process-injections\" aria-hidden=\"true\">#</a>Process Injections</h2>\n<p>These properties are injected into the client process.</p>\n<h3 id=\"isclient\"><a href=\"#isclient\" aria-hidden=\"true\">#</a>isClient</h3>\n<ul>\n<li>Type: <code class=\"language-text\">boolean</code></li>\n</ul>\n<pre class=\"language-js\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>isClient<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// browser only code</span>\n<span class=\"token punctuation\">}</span></pre>\n<h3 id=\"isserver\"><a href=\"#isserver\" aria-hidden=\"true\">#</a>isServer</h3>\n<ul>\n<li>Type: <code class=\"language-text\">boolean</code></li>\n</ul>\n<pre class=\"language-js\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>isServer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// server only code</span>\n<span class=\"token punctuation\">}</span></pre>\n","headings":[{"value":"Client API"}],"subtitles":[{"value":"Usage in plugins","anchor":"#usage-in-plugins"},{"value":"The client context","anchor":"#the-client-context"},{"value":"Component Injections","anchor":"#component-injections"},{"value":"Process Injections","anchor":"#process-injections"}]}},"context":{}}