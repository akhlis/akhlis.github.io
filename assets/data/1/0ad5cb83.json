{"data":{"html":{"path":"/html/charset","title":"Server API","content":"<h1 id=\"server-api\"><a href=\"#server-api\" aria-hidden=\"true\">#</a>Server API</h1>\n<p>Create a <code class=\"language-text\">gridsome.server.js</code> at root in your project or plugin in order to use the Server API. The file must export a function that will receive an API which allows it to hook into various parts of Gridsome. The second argument is options from the plugin entry in <code class=\"language-text\">gridsome.config.js</code>.</p>\n<blockquote>\n<p><code class=\"language-text\">index.js</code> will be loaded instead if no <code class=\"language-text\">gridsome.server.js</code> file is found.</p>\n</blockquote>\n<pre class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">MyPlugin</span> <span class=\"token punctuation\">(</span>api<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n\nMyPlugin<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">defaultOptions</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  option<span class=\"token punctuation\">:</span> <span class=\"token string\">'value'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> MyPlugin</pre>\n<p>The file can also export a class instead.</p>\n<pre class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyPlugin</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> <span class=\"token function\">defaultOptions</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      option<span class=\"token punctuation\">:</span> <span class=\"token string\">'value'</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">constructor</span> <span class=\"token punctuation\">(</span>api<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> MyPlugin</pre>\n<h2 id=\"apiloadsourcefn\"><a href=\"#apiloadsourcefn\" aria-hidden=\"true\">#</a>api.loadSource(fn)</h2>\n<p>Load data from local files or external APIs and create content types and nodes of it. The data will then be available in your GraphQL queries.</p>\n<p>Usage:</p>\n<pre class=\"language-js\">module<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>api<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  api<span class=\"token punctuation\">.</span><span class=\"token function\">loadSource</span><span class=\"token punctuation\">(</span>store <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Use Data Store API here</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></pre>\n<p><a href=\"/docs/data-store-api\">Read more about the Data Store API</a></p>\n<h2 id=\"apichainwebpackfn\"><a href=\"#apichainwebpackfn\" aria-hidden=\"true\">#</a>api.chainWebpack(fn)</h2>\n<p>A function that will receive an instance of ChainableConfig powered by <a href=\"https://github.com/neutrinojs/webpack-chain\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">webpack-chain</a>.</p>\n<h4 id=\"usage\"><a href=\"#usage\" aria-hidden=\"true\">#</a>Usage</h4>\n<pre class=\"language-js\">api<span class=\"token punctuation\">.</span><span class=\"token function\">chainWebpack</span><span class=\"token punctuation\">(</span>config <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// modify config here</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></pre>\n<h2 id=\"apiconfigureserverfn\"><a href=\"#apiconfigureserverfn\" aria-hidden=\"true\">#</a>api.configureServer(fn)</h2>\n<p>Gridsome runs an <a href=\"http://expressjs.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Express</a> server during development. Use this hook to add custom endpoints or configure the server.</p>\n<h4 id=\"usage-1\"><a href=\"#usage-1\" aria-hidden=\"true\">#</a>Usage</h4>\n<pre class=\"language-js\">api<span class=\"token punctuation\">.</span><span class=\"token function\">configureServer</span><span class=\"token punctuation\">(</span>app <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  app<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/my-endpoint'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello, world!'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></pre>\n<p>Read more about the <a href=\"https://expressjs.com/en/api.html#app\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Express Application API</a></p>\n<h2 id=\"apicreateschemafn\"><a href=\"#apicreateschemafn\" aria-hidden=\"true\">#</a>api.createSchema(fn)</h2>\n<p>Create a custom GraphQL schema which will be merged with the Gridsome schema.</p>\n<h4 id=\"usage-2\"><a href=\"#usage-2\" aria-hidden=\"true\">#</a>Usage</h4>\n<pre class=\"language-js\">api<span class=\"token punctuation\">.</span><span class=\"token function\">createSchema</span><span class=\"token punctuation\">(</span>graphql <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">graphql<span class=\"token punctuation\">.</span>GraphQLSchema</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    query<span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">graphql<span class=\"token punctuation\">.</span>GraphQLObjectType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      name<span class=\"token punctuation\">:</span> <span class=\"token string\">'CustomRootQuery'</span><span class=\"token punctuation\">,</span>\n      fields<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// ...</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></pre>\n<h2 id=\"apisetclientoptionsoptions\"><a href=\"#apisetclientoptionsoptions\" aria-hidden=\"true\">#</a>api.setClientOptions(options)</h2>\n<p>Set custom options for the client. Will use options from the plugin entry if not used.</p>\n<h4 id=\"arguments\"><a href=\"#arguments\" aria-hidden=\"true\">#</a>Arguments</h4>\n<ul>\n<li>options <code class=\"language-text\">any</code> Any value which can be serialized by <code class=\"language-text\">JSON.stringify</code>.</li>\n</ul>\n<h4 id=\"usage-3\"><a href=\"#usage-3\" aria-hidden=\"true\">#</a>Usage</h4>\n<pre class=\"language-js\">module<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>api<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  api<span class=\"token punctuation\">.</span><span class=\"token function\">setClientOptions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    customOption<span class=\"token punctuation\">:</span> options<span class=\"token punctuation\">.</span>value\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></pre>\n<h2 id=\"apibeforebuildfn\"><a href=\"#apibeforebuildfn\" aria-hidden=\"true\">#</a>api.beforeBuild(fn)</h2>\n<h2 id=\"apiafterbuildfn\"><a href=\"#apiafterbuildfn\" aria-hidden=\"true\">#</a>api.afterBuild(fn)</h2>\n","headings":[{"value":"Server API"}],"subtitles":[{"value":"api.loadSource(fn)","anchor":"#apiloadsourcefn"},{"value":"api.chainWebpack(fn)","anchor":"#apichainwebpackfn"},{"value":"api.configureServer(fn)","anchor":"#apiconfigureserverfn"},{"value":"api.createSchema(fn)","anchor":"#apicreateschemafn"},{"value":"api.setClientOptions(options)","anchor":"#apisetclientoptionsoptions"},{"value":"api.beforeBuild(fn)","anchor":"#apibeforebuildfn"},{"value":"api.afterBuild(fn)","anchor":"#apiafterbuildfn"}]}},"context":{}}