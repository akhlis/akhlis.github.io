{"data":{"doc":{"path":"/docs/querying-data","title":"Querying data","content":"<h1 id=\"querying-data\"><a href=\"#querying-data\" aria-hidden=\"true\">#</a>Querying data</h1>\n<p>You can query fetched data into any <strong>Page, Template or Component</strong>. Queries are added with a <code class=\"language-text\">&lt;page-query&gt;</code> or <code class=\"language-text\">&lt;static-query&gt;</code> block in Vue Components.</p>\n<ul>\n<li>Use <code class=\"language-text\">&lt;page-query&gt;</code> in <strong>Pages &#x26; Templates</strong>.</li>\n<li>Use <code class=\"language-text\">&lt;static-query&gt;</code> in <strong>Components</strong>.</li>\n</ul>\n<h2 id=\"how-to-query-with-graphql\"><a href=\"#how-to-query-with-graphql\" aria-hidden=\"true\">#</a>How to query with GraphQL</h2>\n<p>Working with GraphQL in Gridsome is easy and you don't need to know much about GraphQL. Here is an example of how to use GraphQL in <code class=\"language-text\">page-query</code> for a page:</p>\n<pre class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>edge in $page.posts.edges<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>edge.node.id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>{{ edge.node.title }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>    \n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>page-query</span><span class=\"token punctuation\">></span></span><span class=\"token graphql\">\n<span class=\"token keyword\">query</span> Posts <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">posts</span><span class=\"token punctuation\">:</span> allWordPressPost <span class=\"token punctuation\">{</span>\n    edges <span class=\"token punctuation\">{</span>\n      node <span class=\"token punctuation\">{</span> \n        id\n        title\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>page-query</span><span class=\"token punctuation\">></span></span></pre>\n<p><strong>With GraphQL you only query the data you need.</strong> This makes it easier and more tidy to work with data. A query always starts with <code class=\"language-text\">query</code> and then something like <code class=\"language-text\">Posts</code> <em>(Can be anything)</em>. Then you write something like <code class=\"language-text\">posts: allWordPressPost</code>. The <code class=\"language-text\">allWordPressPost</code> is the name of the GraphQL collection you want to query. The <code class=\"language-text\">post:</code> part is an optional alias. When using <code class=\"language-text\">post</code> as alias, your data will be available at <code class=\"language-text\">$page.posts</code> (or <code class=\"language-text\">$static.posts</code> if you use <code class=\"language-text\">&lt;static-query&gt;</code>). Otherwise it will be available at <code class=\"language-text\">$page.allWordPressPost</code>.</p>\n<p><a href=\"https://graphql.org/learn/queries/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Learn more about GraphQL queries</a></p>\n<h2 id=\"querying-collections\"><a href=\"#querying-collections\" aria-hidden=\"true\">#</a>Querying collections</h2>\n<p>Every content type has a collection and a single entry in the GraphQL schema. You will notice that some of the root fields in your schema are prefixed with <code class=\"language-text\">all</code>. They are the collections for each of your content types and you can use them in your pages to create lists of single entries.</p>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>sortBy</strong></td>\n<td><code class=\"language-text\">&quot;date&quot;</code></td>\n<td>Sort by a node field.</td>\n</tr>\n<tr>\n<td><strong>order</strong></td>\n<td><code class=\"language-text\">DESC</code></td>\n<td>Sort order (<code class=\"language-text\">DESC</code> or <code class=\"language-text\">ASC</code>).</td>\n</tr>\n<tr>\n<td><strong>sort</strong></td>\n<td></td>\n<td>Sort by multiple node fields.</td>\n</tr>\n<tr>\n<td><strong>skip</strong></td>\n<td><code class=\"language-text\">0</code></td>\n<td>How many nodes to skip.</td>\n</tr>\n<tr>\n<td><strong>limit</strong></td>\n<td></td>\n<td>How many nodes to get.</td>\n</tr>\n<tr>\n<td><strong>page</strong></td>\n<td></td>\n<td>Which page to get.</td>\n</tr>\n<tr>\n<td><strong>perPage</strong></td>\n<td></td>\n<td>How many nodes to show per page. Omitted if no <code class=\"language-text\">page</code> argument is provided.</td>\n</tr>\n<tr>\n<td><strong>filter</strong></td>\n<td><code class=\"language-text\">{}</code></td>\n<td><a href=\"/docs/filtering-data\">Read more</a>.</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"find-nodes-sorted-by-title\"><a href=\"#find-nodes-sorted-by-title\" aria-hidden=\"true\">#</a>Find nodes sorted by title</h4>\n<pre class=\"language-graphql\"><span class=\"token keyword\">query</span> Posts <span class=\"token punctuation\">{</span>\n  allPost<span class=\"token punctuation\">(</span><span class=\"token attr-name\">sortBy</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"title\"</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">order</span><span class=\"token punctuation\">:</span> DESC<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    edges <span class=\"token punctuation\">{</span>\n      node <span class=\"token punctuation\">{</span>\n        title\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre>\n<h4 id=\"sort-a-collection-by-multiple-fields\"><a href=\"#sort-a-collection-by-multiple-fields\" aria-hidden=\"true\">#</a>Sort a collection by multiple fields</h4>\n<pre class=\"language-graphql\"><span class=\"token keyword\">query</span> Posts <span class=\"token punctuation\">{</span>\n  allPost<span class=\"token punctuation\">(</span><span class=\"token attr-name\">sort</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> <span class=\"token attr-name\">by</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"featured\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">by</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"date\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    edges <span class=\"token punctuation\">{</span>\n      node <span class=\"token punctuation\">{</span>\n        title\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre>\n<h2 id=\"querying-single-nodes\"><a href=\"#querying-single-nodes\" aria-hidden=\"true\">#</a>Querying single nodes</h2>\n<p>The other fields that do not start with <code class=\"language-text\">all</code> are your single entries. They are typically used by templates to get data for the current page. You must provide either an <code class=\"language-text\">id</code> or a <code class=\"language-text\">path</code> as an argument to find the node.</p>\n<h4 id=\"arguments\"><a href=\"#arguments\" aria-hidden=\"true\">#</a>Arguments</h4>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>id</strong></td>\n<td><code class=\"language-text\">null</code></td>\n<td>Get node by <code class=\"language-text\">id</code>.</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"example-query\"><a href=\"#example-query\" aria-hidden=\"true\">#</a>Example query</h4>\n<pre class=\"language-graphql\"><span class=\"token keyword\">query</span> Post <span class=\"token punctuation\">{</span>\n  post<span class=\"token punctuation\">(</span><span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    title\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre>\n<h2 id=\"explore--test-queries\"><a href=\"#explore--test-queries\" aria-hidden=\"true\">#</a>Explore &#x26; test queries</h2>\n<p>Every Gridsome project has a <strong>GraphQL explorer (Playground)</strong> that can be used to explore and test queries when in development mode. Here you also get a list of all available GraphQL collections. This can usually be opened by going to <code class=\"language-text\">http://localhost:8080/___explore</code>.</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1153 732' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-36'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-36)' width='1153' height='732' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAApCAYAAACFki9MAAAACXBIWXMAAAsSAAALEgHS3X78AAAMoklEQVRo3t1aWWxcVxkeQKRZ6tizL3YSrxOPxzOexZ7Vu%2bMsbUqbtjy0ElTllTfekEAg9QEJJCR4oC8IHkDihQcqVLVFrQS8tE2TqqIVdEtpnKVJHXvGuz3bx/efe%2b/kznjs2E7cByz9OveeezX2//3f%2bf7vnLHlQLMdDzmO4Zs2Hw46j%2bGw%2bwQOOdtw0KHFIUcrDtp9avx/CMnliIt5So68tkSe/yX8qVPoHzuP9vgEPP1ZNLX5YesMw94dxSHXiXsCcNC%2b%2bX4/45CM/D2SxG5CEn/I5kVPJIUTfTF1bQk9/2v0pqeROf8MupLT8ISG8XCrH/auCBw9MbLhOH%2bpV4GggKgbNXAMgGrn9zPk93yjyQnLw3Z8bRdhOWJj4j4csHrUtcXWFYbNP4Tm7jjsJxNw9DL8g7Ab0ROHtTsCa9cArJ0DaOk0jV1atKj7cPWZMb8/EYGtI4Km/jB%2b8/Kf8P57H%2bDNi%2b/g7XcuMy7dIy6reIvvv3XxEi5eugxLdPxRhIbPIMw4mZgg9QcQHjmr5uIT59EVH0PTiRA6IsPo5nVnbAQ9g%2bPoiI6gNzkF/9CEWiqdvA/wvn0gi4eP9aH5RD%2bO7lM4CEBzZAD/uPke7vfH4jg5BKdUndW3kwlSdbk3ws7nNs5p7xmRMF0PKca4%2b5Jo7oqqkHdtZI6E3cwmPWz3EeozugZxNBrDK5%2b8CVSAlbVVbGxsIJ/Pq1haWqqOCwsLyOVyWF5eRqlUQqlcRpmxvr6OtbU1WJo7BnC0PcSKBdHc3o%2bWjrBWveNyz/kOjeIyNsuzBiHPD7f2YmD4tGJOCxMXLXFTUF3BDCP74IKf6Q5kYU2k8NqVi6qKG4UNFIvFalIChlwbYcwJAJJ8pVJBoVBQcxZRe4dUKzgBq3%2bYfzzZQKrbo2NaFZlcE8HZio4C2AF3Ny48%2bz389dXX8dLLr%2bHUE8/AzcTbIqNw9qXhVCBo4TSN6tkuQ33OyQysg0kC8LZiwKrOAAkjMRnrwwyM8b5F1N5FWll707Bx/dpiadiHsnAMj8MaJsXZCYQJiiUNQkTv67YTePF3f8QLP/s5Xvzt7/HCL36Fo50ReMmCaHIQqXQUffFB1WJ9oYwSWmdfqiapanLbhDOovxPIoDmZwN8%2be0cxoFAsaPRmNEp8u7A4eqJwMcmjHUG0BCOwJ5OwxrjeIqx%2blGuZALUIAKx2ffIGAx7y9ODMhWfwF1b/zy%2b9jOFzT8IZSCm6evvTOJ44g9bko/AmzsPH8KYehyd%2bRgHkDY/sKHkV/QSvO4nO7z%2bOwB%2bew%2bvXLwNFIL%2b4oNa7rHOh965E0N4t/T6qUfp4P%2bypFGwJgtDDeVbRoHrzNiDIeJAgdMeG0RUbVRrQatBfkhuYVEn7sk/Bm3xMAdEam6ROZJVO7AYAa%2bcQ4j99Do%2b99RO8MkMNKGgALC4uKhDKZQ0AAWInYXGwhbn8ZEC7nqg4QAFgkOrOZ%2bbqbwLANC/vPUwAbb0pJYC%2b8PBdegeS8Mam0Zq5wMqfhov0l%2bdm6m8FQs28DkDsR9/Bmb//EK/OaEugAlPVK%2bUtkzWAMQOkNKC5LsmWHhqOAS6BCJdCMK6YUV/xRtdiUow/tnVgtCY5D/94b39GWxpUc2cwu0kY7xnUD1tXAqEfP4vMP3%2bA1wSAuTyWP/0Yc/N5LOZvA7kPUF6%2b3pDuZiCMjmBpWGWywBqOo6V7QK3xo8eCCoR7LQVph5KsWwFQu7adejv0Jh7lUnhaaYCPS8Cnv%2bekCDsDJsUPNBgD2nveiXE4vzuFN2aoAWXKwMoSCqR/ie2uLIJYWEOluKJFgbpQXGXipS0Y0L2ZAc1ij1l9a4Dg9FIE%2bzj6%2bV5H4%2bTrAainb83INe8ZPKuA8CbPkxmj1AgCMzkFT2oM7sERFR52IRfdpyczDvfQKDzpMXiy42p097ALBIfwxueXKABM/tpVVO7MojLzOXK3ZzFH41MhC8rz/0Z56SrKd/6lQDADUGWAjf7aSEB0oJm2t0U8d4h7AFkCQwnVGWyxIcWMnQDgrEu6huKyHKgDPoqhmx3Ak2CkmeD4BLzTp%2bCVkWB4pxineD9GsRzh3Pik9pzzvuQ47GfG8MZVMoCFLVIEy0uLKKj%2bzmqvz6OyscBxrqYraFWvXQ6qDRpLQK1jJiG60GTQXsZdLgEj0YYM4Kgx4BF4BphYhtejjOxpAsFkU5NatdN6tVl9d5KRGFUMEUZ4uO%2bwTQxrAKysoXD7Fkpf3ERudg7LS3lUVlj9pWsoL/6XmljYRH35KeuWWImgWud6TxdN2KrKWyXfCIB6VTffuyOT8KWfUC3Rl3qCwe4QnaZ2cDkEx%2bA8mdQ0gR3FWPfGvYv3Ln8aLbGEBsA6Dc38HVTyOayLF1jhul8jA1ZvUwxvbqL%2bJg1w%2bePVJCT55u3anmp9oV1pgBkQMT0SjkBKtUYtElqIMwym7%2b0J2EncvRm0DCU1ANa4D1jIKw1YmZ/HIkFQS2Btjgz4nCK4tD0DnPQAVlbepu/lt01%2bm6jRgL70JiDEG5hbo8vUBrft/Y3CAEBEcHkVhVs3KXQEIC%2bGaEElrsRv%2bYbqBFsBoBggSdv0w44mfQe42%2bQbMcBnsriq%2bgIA3aHDqHzdXmBXYWZAkTu73Dx3RKtYpxVeWRURzCkGKBEsrW0PgHlnt9fkdwKAm9RVW2TaYk/0FHVgQpkjwwrXeIDtdoN9shukBgwKAO%2bKD0bx5nWs37iGHK/X8l8Ai1dQzl%2bpUf/66%2boS2InA7QmAeiOkJyAdoHX42/AOnoMvMgavLAsC4YoOK6fnCmfvhszTI7hCWe1ZSLsX0KzJlMYA5lNcXkRpZRnrNELF4jondB0Q82OufJ0lVgzYa8I71YBamqeVFXZHprRNEcMTYouj4fGdntba3Oik1vtphNxxiubEVLUdqvbINuhNT8B%2belRjAK1w4Rrb3vXrqNz6EuWZa7jzxSxyS%2bv6PgFb7gn2DYBGYubUvYHyAbIVJhNcfUn2d7q9MUmciZ2aUiHGxzA/nlGOBEeZoinNIPlGJmE/K0aIe4H1OyjMvk8R/JDO70OUZj9AMXcFxfmPUM59pAyR2QRtuwQeJABbWWKnDoAv86TmA7IXGPQEqXNwR1n16ESV6lX6G0silL27BFJpbQnwp7hGH1BeZ7J5WQ8MCmFhUbVAwwiZLGCNJuwrAPVLQf5wORVyhWh/uT0WQ%2bSOsuKx07TFY3xPtsgj2wqidiRmEkFjCdy8gcLVGczPzmMhT0AWP6MQfqrtBxY4LvA%2bR5bkPmb5N6qHo/ujAVswQEyQdAJn1QiZDNFu2mK1Db6riSAFsLIm7Y%2b2eIPGqLCh7QKFAWpXyGfFNT1Was4MvhIN0FzgMNqo%2bg41l93%2b7G%2bnRkiWwPwCGTCD0pe3uRu8ityNG5inIVIVl5j/D5nwiXYtjMh/TLDukAGV/dUA83mA4QSlNToM%2b9uAKfcM410zA%2bQ8gDvBCitfWV3hjnCDLFjXq7%2bsawGjtK4zQRhQ2l8GuBsAoPl4asDQObUREg2QEyKvfnRWPRDprT38qF5XP6NuLzCXw8aVT1AiC0QHcrduY25ulpujj1Cae19b/1L5hSsaG6gJAk6pLJ2gtH8MqD/sNKotYqc8wNAj8A2dVT7AFc6o7a86DOG2101TJB5AbYXlmvPSAWp2g/FktQuU9vSlWGX/usDWRkgHgVbYl/yW1gmYqBgg3xn2%2bYlJFdL7PTRDvrPTuimiF0jSKwg4cloUG4V1OHMXgFKxwSFouW40rss1nmAfRXCbAxExQlwKcjrsyUzAN81Ex6e0w46MdhCiDNCYDoZxL0aI5sg3OgX7NJ3gzLsaAOXSJoeHbY7Czc%2b%2bUiNkLAWpvBghX5omKPM0fKmn4I3TCIXGSfUJUj2pa0CqVhtqlkDiLgPKpb1/O7zfbdC4d%2bidwBA9V7%2bpFfZnd94JRAQDJhG8XwAexPf1zfqXKvUaYA4RRWmDrj1%2bKVqjJWTDAwNAq2DYVM2wKbR79ZW5PhqhvhqvYUCIAESUyZFkxfUZX2c71fZ4FG30%2bk6j4nsMt%2bnr8QcCwJHWkzjMONKmR6sp2nr5zI9DPr82entwUA%2bZazoWqImjJ4Kw9sRgZ7gD8k8SMRXWbvmniUH1zxRybczvKfz8/M4YmiLRPQFQvyW2uLr74T1J6nb1q3D3hOGR8Idh7wigrS%2bGrmgax4Nx9MQyKvrYjtpDQzjobsdhbwcOeeqjXT2rnzu0aW73Ib/vsLMdB3o674sBBggWe0cfJFqOn4S1vRc2ue/sg6MzqOYcXUEFiq09gNZADMcIRFtfXM1pf1DnVxs%2bhqsDB/xd980A2Qv8D9QIyh4CrRF/AAAAAElFTkSuQmCC' /%3e%3c/svg%3e\" width=\"1153\" alt=\"graphql-explorer\" data-srcset=\"/assets/static/graphql-explorer.82a2fbd.21e0efa.png 480w, /assets/static/graphql-explorer.cbab2cf.21e0efa.png 1024w\" data-sizes=\"(max-width: 1153px) 100vw, 1153px\" data-src=\"/assets/static/graphql-explorer.cbab2cf.21e0efa.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/graphql-explorer.cbab2cf.21e0efa.png\" width=\"1153\" alt=\"graphql-explorer\"></noscript></p>\n<h2 id=\"query-data-in-pages\"><a href=\"#query-data-in-pages\" aria-hidden=\"true\">#</a>Query data in Pages</h2>\n<p>Every <strong>page</strong> can have a <code class=\"language-text\">&lt;page-query&gt;</code> block with a GraphQL query\nto fetch data from data sources. The results will be stored in a\n<code class=\"language-text\">$page</code> property inside the page component.</p>\n<pre class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Layout</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>Latest blog posts<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>edge in $page.posts.edges<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>edge.node.id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        {{ edge.node.title }}\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Layout</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>page-query</span><span class=\"token punctuation\">></span></span><span class=\"token graphql\">\n<span class=\"token keyword\">query</span> Blog <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">posts</span><span class=\"token punctuation\">:</span> allWordPressPost <span class=\"token punctuation\">{</span>\n    edges <span class=\"token punctuation\">{</span>\n      node <span class=\"token punctuation\">{</span>\n        id\n        title\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>page-query</span><span class=\"token punctuation\">></span></span></pre>\n<h2 id=\"query-data-in-templates\"><a href=\"#query-data-in-templates\" aria-hidden=\"true\">#</a>Query data in Templates</h2>\n<p>Templates are used for page layout for the <em>single</em> endpoint of a data source like for example a WordPress blog post. If you have a node type called <code class=\"language-text\">WordPressPost</code>, then you can create a file\nin <code class=\"language-text\">src/templates/WordPressPost.vue</code>.</p>\n<p>The <code class=\"language-text\">page-query</code> in templates also has a set of variables that can be used in the query. Any custom fields from the current <code class=\"language-text\">node</code> are available as variables. Access field values in deep objects or arrays by separating properties or indexes with double underscores (<code class=\"language-text\">__</code>).</p>\n<ul>\n<li><code class=\"language-text\">$id</code> resolves to <code class=\"language-text\">node.id</code></li>\n<li><code class=\"language-text\">$value</code> resolves to <code class=\"language-text\">node.fields.value</code></li>\n<li><code class=\"language-text\">$object__value</code> resolves to <code class=\"language-text\">node.fields.object.value</code></li>\n<li><code class=\"language-text\">$array__3__id</code> resolves to <code class=\"language-text\">node.fields.array[3].id</code></li>\n</ul>\n<pre class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Layout</span> <span class=\"token attr-name\">:title</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>$page.post.title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">v-html</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>$page.post.content<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>edge in $page.related<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>edge.node.id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>g-link</span> <span class=\"token attr-name\">:to</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>edge.node.path<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          {{ edge.node.title }}\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>g-link</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Layout</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>page-query</span><span class=\"token punctuation\">></span></span><span class=\"token graphql\">\n<span class=\"token keyword\">query</span> Post<span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$group</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  post<span class=\"token punctuation\">(</span><span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    title\n    content\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token attr-name\">related</span><span class=\"token punctuation\">:</span> allPost<span class=\"token punctuation\">(</span><span class=\"token attr-name\">filter</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">group</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">eq</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$group</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    edges <span class=\"token punctuation\">{</span>\n      node <span class=\"token punctuation\">{</span>\n        id\n        title\n        path\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>page-query</span><span class=\"token punctuation\">></span></span></pre>\n<h2 id=\"query-data-in-components\"><a href=\"#query-data-in-components\" aria-hidden=\"true\">#</a>Query data in Components</h2>\n<p>Every <strong>Component</strong> can have a <code class=\"language-text\">&lt;static-query&gt;</code> block with a GraphQL query to fetch data from data sources. The results will be stored in a <code class=\"language-text\">$static</code> property inside the component. A <code class=\"language-text\">&lt;static-query&gt;</code> is named static as it can not accept any variables.</p>\n<pre class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">v-html</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>$static.post.content<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>static-query</span><span class=\"token punctuation\">></span></span><span class=\"token graphql\">\n<span class=\"token keyword\">query</span> Post <span class=\"token punctuation\">{</span>\n  post<span class=\"token punctuation\">(</span><span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    content\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>static-query</span><span class=\"token punctuation\">></span></span></pre>\n","headings":[{"value":"Querying data"}],"subtitles":[{"value":"How to query with GraphQL","anchor":"#how-to-query-with-graphql"},{"value":"Querying collections","anchor":"#querying-collections"},{"value":"Querying single nodes","anchor":"#querying-single-nodes"},{"value":"Explore & test queries","anchor":"#explore--test-queries"},{"value":"Query data in Pages","anchor":"#query-data-in-pages"},{"value":"Query data in Templates","anchor":"#query-data-in-templates"},{"value":"Query data in Components","anchor":"#query-data-in-components"}]}},"context":{}}