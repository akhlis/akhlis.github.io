{"data":{"doc":{"path":"/docs/client-side-data","title":"Client-side data","content":"<h1 id=\"client-side-data\"><a href=\"#client-side-data\" aria-hidden=\"true\">#</a>Client-side data</h1>\n<p>Client-side data is data added after page load. This can be data coming from other internal pages, a REST API or a GraphQL API. It's important to ony load your data in the <code class=\"language-text\">mounted</code> hook to prevent it from being included in the generated markup.</p>\n<h2 id=\"fetch-from-internal-pages\"><a href=\"#fetch-from-internal-pages\" aria-hidden=\"true\">#</a>Fetch from internal pages</h2>\n<p>Fetch <code class=\"language-text\">page-query</code> results and <a href=\"http://localhost:8080/docs/pages-api#the-page-context\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">page context</a> from other internal pages. The following example fetches data from <code class=\"language-text\">/other-page</code> and stores the results.</p>\n<pre class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">data</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      otherPage<span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> results <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/other-page'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>otherPage <span class=\"token operator\">=</span> results<span class=\"token punctuation\">.</span>data\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre>\n<p>The <code class=\"language-text\">fetch</code> method can also be imported from <code class=\"language-text\">gridsome</code>.</p>\n<pre class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> fetch <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'gridsome'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> results <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/other-page'</span><span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre>\n<p>Read more about the <a href=\"/docs/client-api#fetchpath\">$fetch() method</a>.</p>\n<h2 id=\"fetch-from-rest-api\"><a href=\"#fetch-from-rest-api\" aria-hidden=\"true\">#</a>Fetch from REST API</h2>\n<p>....Contributions are welcome!</p>\n<h2 id=\"fetch-from-graphql-api\"><a href=\"#fetch-from-graphql-api\" aria-hidden=\"true\">#</a>Fetch from GraphQL API</h2>\n<p>....Contributions are welcome!</p>\n<h2 id=\"fetch-from-local-yaml-files\"><a href=\"#fetch-from-local-yaml-files\" aria-hidden=\"true\">#</a>Fetch from local YAML files</h2>\n<p>The following example fetches local YAML files within .vue templates:</p>\n<ol>\n<li>Create a YAML file in <code class=\"language-text\">/src/data</code> folder. For example: <code class=\"language-text\">products.yaml</code></li>\n<li>Add <code class=\"language-text\">import products from @/data/products.yaml</code> before <code class=\"language-text\">export default</code> function.</li>\n<li>Add the data from the YAML file to the data layer by creating a new object key <code class=\"language-text\">products</code> and defining it with the just imported <code class=\"language-text\">products</code>. Since the object key and the value are the same, we can destructure to just <code class=\"language-text\">products</code>.</li>\n</ol>\n<pre class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>product in products<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">v-html</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>product.title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\">\n<span class=\"token keyword\">import</span> products <span class=\"token keyword\">from</span> <span class=\"token string\">'@/data/products.yaml'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      products\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre>\n<h2 id=\"fetch-from-local-json-files\"><a href=\"#fetch-from-local-json-files\" aria-hidden=\"true\">#</a>Fetch from local JSON files</h2>\n<p>The following example fetches local JSON data within .vue templates:</p>\n<ol>\n<li>Create a JSON file in <code class=\"language-text\">/src/data</code> folder. For example: <code class=\"language-text\">users.json</code></li>\n<li>Add <code class=\"language-text\">import products from @/data/users.json</code> before <code class=\"language-text\">export default</code> function.</li>\n<li>Add the data from the JSON file to the data layer by creating a new object key <code class=\"language-text\">users</code> and defining it with the just imported <code class=\"language-text\">users</code>. Since the object key and the value are the same, we can destructure to just <code class=\"language-text\">users</code>.</li>\n</ol>\n<pre class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>user in users<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">v-html</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>user.name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\">\n<span class=\"token keyword\">import</span> users <span class=\"token keyword\">from</span> <span class=\"token string\">'@/data/users.json'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      users\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre>\n","headings":[{"value":"Client-side data"}],"subtitles":[{"value":"Fetch from internal pages","anchor":"#fetch-from-internal-pages"},{"value":"Fetch from REST API","anchor":"#fetch-from-rest-api"},{"value":"Fetch from GraphQL API","anchor":"#fetch-from-graphql-api"},{"value":"Fetch from local YAML files","anchor":"#fetch-from-local-yaml-files"},{"value":"Fetch from local JSON files","anchor":"#fetch-from-local-json-files"}]}},"context":{}}